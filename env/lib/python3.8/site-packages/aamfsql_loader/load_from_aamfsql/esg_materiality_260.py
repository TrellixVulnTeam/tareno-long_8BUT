import logging

import pandas as pd

from aamfsql_loader.load_from_aamfsql.util import query_to_interface
from sray_db.apps import apps

log = logging.getLogger(__name__)


def upload(start_date, end_date):
    app = apps['ESGMateriality'][(2, 6, 0, 0)]

    q = f"""
SELECT assetid,
 date,
 CAST(ROUND(e_air, 4) AS NUMERIC(10,4)) AS e_air, 
 CAST(ROUND(e_man, 4) AS NUMERIC(10,4)) AS e_man, 
 CAST(ROUND(e_oth, 4) AS NUMERIC(10,4)) AS e_oth, 
 CAST(ROUND(es_bio, 4) AS NUMERIC(10,4)) AS es_bio, 
 CAST(ROUND(ru_ene, 4) AS NUMERIC(10,4)) AS ru_ene, 
 CAST(ROUND(ru_wat, 4) AS NUMERIC(10,4)) AS ru_wat, 
 CAST(ROUND(s_ene, 4) AS NUMERIC(10,4)) AS s_ene, 
 CAST(ROUND(be_cor, 4) AS NUMERIC(10,4)) AS be, 
 CAST(ROUND(cap_str, 4) AS NUMERIC(10,4)) AS cap_str, 
 CAST(ROUND(cg_tra, 4) AS NUMERIC(10,4)) AS cg_tra, 
 CAST(ROUND(cg_boa, 4) AS NUMERIC(10,4)) AS cg_boa, 
 CAST(ROUND(for_acc, 4) AS NUMERIC(10,4)) AS for_acc, 
 CAST(ROUND(hc_com, 4) AS NUMERIC(10,4)) AS hc_com, 
 CAST(ROUND(hc_div, 4) AS NUMERIC(10,4)) AS hc_div, 
 CAST(ROUND(hc_emp, 4) AS NUMERIC(10,4)) AS hc_emp, 
 CAST(ROUND(hc_hri, 4) AS NUMERIC(10,4)) AS hc_hri, 
 CAST(ROUND(hc_lri, 4) AS NUMERIC(10,4)) AS hc_lri, 
 CAST(ROUND(hc_ohs, 4) AS NUMERIC(10,4)) AS hc_ohs, 
 CAST(ROUND(hc_trd, 4) AS NUMERIC(10,4)) AS hc_trd, 
 CAST(ROUND(pl_qas, 4) AS NUMERIC(10,4)) AS pl_qas, 
 CAST(ROUND(sr_com, 4) AS NUMERIC(10,4)) AS sr_com, 
 CAST(ROUND(sr_pra, 4) AS NUMERIC(10,4)) AS sr_pra
FROM ResDaBa.dbo.f_esg_weights
 WHERE job_id = 77991
  AND date BETWEEN '{start_date}' AND '{end_date}'"""

    log.info(f'{pd.Timestamp.now()}: Starting upload for {app.name} from {start_date} to {end_date}')
    query_to_interface(q, app)
