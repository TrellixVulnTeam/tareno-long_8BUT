import logging

import pandas as pd

from aamfsql_loader.load_from_aamfsql.util import query_to_interface
from sray_db.apps import apps
from sray_db.psql.interface import PSQLTable

log = logging.getLogger(__name__)


def upload(*args, **kwargs):
    app_version = (1, 0, 0, 0)
    app_map = {'assetinfo_activity': assetinfo_activity__1_0_0_0,
               'assetinfo_dom_country': assetinfo_dom_country__1_0_0_0,
               'assetinfo_exch_country': assetinfo_exch_country__1_0_0_0,
               'assetinfo_entity': assetinfo_entity__1_0_0_0,
               'assetinfo_exchange': assetinfo_exchange__1_0_0_0,
               'assetinfo_name': assetinfo_name__1_0_0_0,
               'assetinfo_security_id': assetinfo_security_id__1_0_0_0}

    for app_name, query_func in app_map.items():
        app = apps[app_name][app_version]
        q = query_func()
        interface = PSQLTable.from_app(app)
        log.info(f'{pd.Timestamp.now()}: Uninstalling interface on table {interface.table.name}')
        interface.uninstall()
        log.info(f'{pd.Timestamp.now()}: Installing interface on table {interface.table.name}')
        interface.install()
        log.info(f'{pd.Timestamp.now()}: Starting upload for {app.name}')
        query_to_interface(q, app)

def assetinfo_activity__1_0_0_0():
    return """
SELECT COALESCE(n.assetid, i.assetid) AS assetid,
       n.name AS economic_sector,
       i.name AS industry
FROM arabada.dbo.view_asset_sector_name n
FULL OUTER JOIN arabada.dbo.view_asset_industry_name i ON n.assetid = i.assetid"""

def assetinfo_dom_country__1_0_0_0():
    return """
SELECT assetid,
       region,
       iso_code AS iso,
       iso_Code_2 AS iso2,
       name
FROM arabada.dbo.view_asset_company_country_details n"""

def assetinfo_exch_country__1_0_0_0():
    return """
SELECT assetid,
       region,
       iso_code AS iso,
       iso_Code_2 AS iso2,
       name
FROM arabada.dbo.view_asset_exchange_country_details n"""

def assetinfo_entity__1_0_0_0():
    return """
SELECT COALESCE(a.assetid, b.assetid) AS assetid,
       a.primary_equity_assetid AS primary_assetid,
       b.factsetentityid AS fsentityid
FROM arabada.dbo.view_asset_primary_equity_assetid a
FULL OUTER JOIN arabada.dbo.view_assetfsentityid b ON a.assetid = b.assetid"""

def assetinfo_exchange__1_0_0_0():
    return """
SELECT assetid,
       i.Name AS name,
       factset_exchange_iso AS iso,
       mic_exchange_iso AS mic
FROM arabada.dbo.view_asset_exchange_ticker_detailed n
LEFT MERGE JOIN AraBaDa.dbo.view_exchange_info i ON n.factset_exchange_iso = i.ISOCode"""

def assetinfo_name__1_0_0_0():
    return """
SELECT assetid,
       name
FROM arabada.dbo.view_asset_name n"""

def assetinfo_security_id__1_0_0_0():
    return """
SELECT a.assetid,
       b.isin,
       c.fspermid,
       d.sedol,
       e.ticker,
       e.ticker_exchange,
       e.ticker_region,
       f.bloomberg_ticker AS bbg_ticker,
       g.cusip
FROM arabada.dbo.view_asset_name a
LEFT MERGE JOIN arabada.dbo.view_asset_isin b ON a.assetid = b.assetid
LEFT MERGE JOIN arabada.dbo.view_asset_fspermid c ON a.assetid = c.assetid
LEFT MERGE JOIN arabada.dbo.view_asset_sedol d ON a.assetid = d.assetid
LEFT MERGE JOIN arabada.dbo.view_asset_exchange_ticker_detailed e ON a.assetid = e.assetid
LEFT MERGE JOIN arabada.dbo.view_asset_bloomberg_ticker f ON a.assetid = f.assetid
LEFT MERGE JOIN arabada.dbo.view_assetcusip g ON a.assetid = g.assetid"""
