import urllib

from sqlalchemy import create_engine, MetaData
from sqlalchemy.engine import Engine

_ENGINES = {}
_META = {}


def get_engine(database: str = 'MetaDb', force_new: bool = False) -> Engine:
    exists = database in _ENGINES
    if not exists or force_new:
        app_name = 'sray_db'
        params = urllib.parse.quote(
            f"DRIVER={{SQL Server}};SERVER={{AAMFSQL}};DATABASE={database};trusted_connection=yes;APP={app_name}")
        engine = create_engine("mssql+pyodbc:///?charset=utf8&odbc_connect=%s" % params)
    else:
        engine = _ENGINES[database]

    if not exists and not force_new:
        _ENGINES[database] = engine

    return engine


def get_meta(engine: Engine, schema: str = None, force_new: bool = False) -> MetaData:
    exists = engine in _META
    if not exists or force_new:
        if schema is None:
            raise ValueError('MetaData not yet initialized; schema needs to be specified')
        meta = MetaData(bind=engine, schema=schema)
    else:
        meta = _META[engine]

    if not exists and not force_new:
        _META[engine] = meta

    return meta