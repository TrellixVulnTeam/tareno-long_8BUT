from sray_db.apps import apps
from aamfsql_loader.load_from_aamfsql.util import query_to_interface

import pandas as pd

def upload(start_date, end_date):

    app = apps['GC'][(2, 6, 0, 0)]

    q = f""" SET NOCOUNT ON; 

SELECT a.date, a.assetid,
    a.value AS gc,
    b.value AS gc_ac,
    c.value AS gc_en,
    d.value AS gc_hr,
    e.value AS gc_lr
INTO #values
FROM ResDaBa.dbo.f_ungc a
    LEFT JOIN ResDaBa.dbo.f_ungc_ac b ON a.assetid = b.assetid AND a.date = b.date AND a.job_id = b.job_id
    LEFT JOIN ResDaBa.dbo.f_ungc_en c ON a.assetid = c.assetid AND a.date = c.date AND a.job_id = c.job_id
    LEFT JOIN ResDaBa.dbo.f_ungc_hr d ON a.assetid = d.assetid AND a.date = d.date AND a.job_id = d.job_id
    LEFT JOIN ResDaBa.dbo.f_ungc_lr e ON a.assetid = e.assetid AND a.date = e.date AND a.job_id = e.job_id
WHERE a.job_id = 77991
AND a.date BETWEEN '{start_date}'AND '{end_date}'

SELECT date, assetid,
    gc,
    gc_ac,
    gc_en,
    gc_hr,
    gc_lr,
    (1-POWER((1-LOG(2)/10),(50-gc_ac))+1)*0.25 AS gc_ac_weight,
    (1-POWER((1-LOG(2)/10),(50-gc_en))+1)*0.25 AS gc_en_weight,
    (1-POWER((1-LOG(2)/10),(50-gc_hr))+1)*0.25 AS gc_hr_weight,
    (1-POWER((1-LOG(2)/10),(50-gc_lr))+1)*0.25 AS gc_lr_weight
INTO #compweighted
FROM #values

SELECT date, assetid,
    gc,
    gc_ac,
    gc_en,
    gc_hr,
    gc_lr,
    CASE WHEN gc_ac_weight < 0.25 THEN 0.25 WHEN gc_ac_weight > 1 THEN 1 ELSE gc_ac_weight END AS gc_ac_weight,
    CASE WHEN gc_en_weight < 0.25 THEN 0.25 WHEN gc_en_weight > 1 THEN 1 ELSE gc_en_weight END AS gc_en_weight,
    CASE WHEN gc_hr_weight < 0.25 THEN 0.25 WHEN gc_hr_weight > 1 THEN 1 ELSE gc_hr_weight END AS gc_hr_weight,
    CASE WHEN gc_lr_weight < 0.25 THEN 0.25 WHEN gc_lr_weight > 1 THEN 1 ELSE gc_lr_weight END AS gc_lr_weight
INTO #clipped
FROM #compweighted

SELECT date, assetid,
    gc,
    gc_ac,
    gc_en,
    gc_hr,
    gc_lr,
    gc_ac_weight / (gc_ac_weight + gc_en_weight + gc_hr_weight + gc_lr_weight) AS gc_ac_weight,
    gc_en_weight / (gc_ac_weight + gc_en_weight + gc_hr_weight + gc_lr_weight) AS gc_en_weight,
    gc_hr_weight / (gc_ac_weight + gc_en_weight + gc_hr_weight + gc_lr_weight) AS gc_hr_weight,
    gc_lr_weight / (gc_ac_weight + gc_en_weight + gc_hr_weight + gc_lr_weight) AS gc_lr_weight
INTO #normalized
FROM #clipped

SELECT date, assetid,
    CAST(ROUND(gc, 2) AS NUMERIC(10,2)) AS gc,
    CAST(ROUND(gc_ac, 2) AS NUMERIC(10,2)) AS gc_ac,
    CAST(ROUND(gc_en, 2) AS NUMERIC(10,2)) AS gc_en,
    CAST(ROUND(gc_hr, 2) AS NUMERIC(10,2)) AS gc_hr,
    CAST(ROUND(gc_lr, 2) AS NUMERIC(10,2)) AS gc_lr,
    CAST(ROUND(gc_ac_weight, 4) AS NUMERIC(10,4)) AS gc_ac_weight, 
    CAST(ROUND(gc_en_weight, 4) AS NUMERIC(10,4)) AS gc_en_weight, 
    CAST(ROUND(gc_hr_weight, 4) AS NUMERIC(10,4)) AS gc_hr_weight, 
    CAST(ROUND(gc_lr_weight, 4) AS NUMERIC(10,4)) AS gc_lr_weight,
    NULL AS hc_hri_gc_hr_weight,
    NULL AS hc_div_gc_hr_weight,
    NULL AS e_oth_gc_en_weight,
    NULL AS sr_com_gc_hr_weight,
    NULL AS hc_ohs_gc_hr_weight,
    NULL AS cg_boa_gc_ac_weight,
    NULL AS pl_qas_gc_hr_weight,
    NULL AS hc_trd_gc_lr_weight,
    NULL AS hc_trd_gc_hr_weight,
    NULL AS hc_emp_gc_hr_weight,
    NULL AS bi_cou_gc_hr_weight,
    NULL AS sr_pra_gc_hr_weight,
    NULL AS hc_ohs_gc_lr_weight,
    NULL AS hc_div_gc_lr_weight,
    NULL AS s_ene_gc_en_weight,
    NULL AS e_air_gc_en_weight,
    NULL AS hc_com_gc_lr_weight,
    NULL AS ru_ene_gc_en_weight,
    NULL AS ru_wat_gc_en_weight,
    NULL AS be_gc_ac_weight,
    NULL AS cg_tra_gc_ac_weight,
    NULL AS hc_lri_gc_lr_weight,
    NULL AS hc_lri_gc_hr_weight,
    NULL AS es_bio_gc_en_weight,
    NULL AS e_man_gc_en_weight,
    NULL AS hc_emp_gc_lr_weight
FROM #normalized
    """

    query_to_interface(q, app)
