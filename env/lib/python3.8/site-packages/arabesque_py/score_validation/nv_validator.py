import pandas as pd
from prometheus_client import Counter

from arabesque_py.score_validation.short_validator import ShortValidator


class NVValidator(ShortValidator):
    def setup_custom_metrics(self) -> None:
        if not hasattr(self.prometheus, "nv_large_movement"):
            self.prometheus.nv_large_movement = Counter(
                "nv_large_movement",
                "Counter of the number of large movers above a threshold",
                registry=self.prometheus.registry,
            )

    def validate(self, curr_df: pd.DataFrame) -> bool:
        """
        This validates in the following way:
        - Filters the dataframe for nv_<feature>
        - Counts the features per company where the values are at the min_val or max_val bounds
        - If the count is above a threshold, we fail the validation

        Args:
            curr_df (pd.DataFrame): current calculation

        Returns:
            bool: Validation status
        """
        self.setup_custom_metrics()

        curr_df = curr_df[self.feature_cols]
        curr_df_counts = curr_df[
            (curr_df < self.min_val) | (curr_df > self.max_val)
        ].count(axis=1)

        if (curr_df_counts > self.threshold_count).any():
            self.prometheus.nv_large_movement.inc()

            self.set_job_failure()
            return False

        self.set_job_success()
        return True
