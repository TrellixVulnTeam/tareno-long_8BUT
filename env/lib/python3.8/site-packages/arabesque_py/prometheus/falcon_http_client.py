from falcon import API
from prometheus_client import CollectorRegistry

from arabesque_py.prometheus import http_client
from arabesque_py.prometheus.http_client import PrometheusHTTPClient


class PrometheusFalconHTTPClient(PrometheusHTTPClient):
    def __init__(
        self, registry, path: str, threaded: bool = True, multiproc_dir: str = None
    ):
        """
        A HTTP client - for returning the metrics for the give endpoint

        Args:
            registry: This is the prometheus registry
            path: The metrics path
        """
        self.registry = registry
        self.path = path
        self.threaded = threaded
        self.multiproc_dir = multiproc_dir

    def on_get(self, req, resp):
        """
        Generates the prometheus metric path output for falcon

        Args:
            req: unused
            resp: unused
        """
        resp.content_type = http_client.RESPONSE_CONTENT_TYPE
        resp.body = self.get_data()

    def attach(self, app: API):
        """
        Args:
            app: The falcon app you want to attach to
        """
        app.add_route(self.path, self)
