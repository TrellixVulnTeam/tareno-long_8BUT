from flask import Response, g, request
from sqlalchemy.orm import sessionmaker


class SQLAlchemySessionMiddleware:
    """
    Create a SQLAlchemy DB session on every request, then closes/rollbacks
    depending on if the request succeeded
    """

    def __init__(self, session: sessionmaker):
        """
        Args:
            session: The DB session maker
        """
        self.session = session

    def before_request(self):
        """
        Starts a new db session for the request context.
        """
        if request.method == "OPTIONS":
            return

        g.db = self.session()

    def after_request(self, response: Response):
        """
        Process the response, if there is a db session context then close the
        connection

        Args:
            response: The response
        """
        if request.method == "OPTIONS":
            return response

        if g.db is not None:
            g.db.close()

        return response
