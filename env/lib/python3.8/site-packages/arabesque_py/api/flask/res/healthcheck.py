import http
from typing import Callable, List

from flask_restful import Resource


class HealthCheckResource(Resource):
    """
    This resource is just used for internal healthchecking of the service
    """

    require_authentication = False
    healthchecks: List[Callable[[], bool]] = None

    def __init__(self, healthchecks: List[Callable[[], bool]] = None):
        """
        Args:
            healthchecks (List[Callable[[], bool]]): A list of custom
                healthcheck functions to execute on each healthcheck endpoint
                request
        """
        self.healthchecks = healthchecks

    def get(self):
        """
        This internal resource handles functions for internal health checking of the
        service
        ---
        description: Health check returning a 200 response
        summary: Health check
        tags:
        - Test
        responses:
            200:
                description: Health check returning a 200 response
                content:
                    application/json:
                        schema:
                            type: object
                            additionalProperties:
                                type: string
        """

        healthy = True
        healthchecks = {}
        if self.healthchecks is not None:
            for healthcheck in self.healthchecks:
                check = healthcheck()
                if not check:
                    healthy = False
                healthchecks[repr(healthcheck)] = check

        if not healthy:
            return {
                "status": "Service Unavailable",
                "healthchecks": healthchecks,
            }, http.HTTPStatus.SERVICE_UNAVAILABLE

        return {"status": "OK", "healthchecks": healthchecks}, http.HTTPStatus.OK
