from typing import Callable, List

from falcon import Request, Response, falcon


class HealthCheckResource:
    """
    This resource is just used for internal healthchecking of the service
    """

    require_authentication = False
    healthchecks: List[Callable[[], bool]] = None

    def __init__(self, healthchecks: List[Callable[[], bool]] = None):
        """
        Args:
            healthchecks (List[Callable[[], bool]]): A list of custom
                healthcheck functions to execute on each healthcheck endpoint
                request
        """
        self.healthchecks = healthchecks

    def on_get(self, request: Request, response: Response):
        """
        This internal resource handles functions for internal health checking of the
        service
        ---
        description: Health check returning a 200 response
        summary: Health check
        tags:
        - Test
        responses:
            200:
                description: Health check returning a 200 response
                content:
                    application/json:
                        schema:
                            type: object
                            additionalProperties:
                                type: string
        """

        healthy = True
        healthchecks = {}
        if self.healthchecks is not None:
            for healthcheck in self.healthchecks:
                check = healthcheck()
                if not check:
                    healthy = False
                healthchecks[repr(healthcheck)] = check

        if not healthy:
            response.status = falcon.HTTP_SERVICE_UNAVAILABLE
            response.media = {"status": falcon.HTTP_503, "healthchecks": healthchecks}
            return

        response.status = falcon.HTTP_OK
        response.media = {"status": "OK", "healthchecks": healthchecks}
