from abc import ABCMeta

import falcon

from arabesque_py.api.falcon.res import readycheck


class Listener(metaclass=ABCMeta):
    """
    The listener can be used as a helper when you want to create your own APIs
    or services where the `DefaultAPI` does not fit the functionality you
    require.

    Both the `DefaultInternalListener` and `DefaultAPI` use this helper.
    """

    provider: falcon.API
    routes: dict = {}

    def add_route(self, path: str, resource, **kwargs):
        """
        Add a route to the provider

        Args:
            path:
            resource:
            **kwargs:
        """
        self.routes[path] = resource
        self.provider.add_route(path, resource, **kwargs)

    def add_routes(self, routes: dict):
        """
        Add multiple routes to the provider

        Args:
            routes: The routes to add
        """
        for route, resource in routes.items():
            self.add_route(route, resource)

    def start(self):
        """
        The API is now ready to serve requests
        """
        readycheck.ready = True
